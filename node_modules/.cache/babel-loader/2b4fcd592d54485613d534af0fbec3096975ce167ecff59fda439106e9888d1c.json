{"ast":null,"code":"var _jsxFileName = \"/Users/nakaharakenta/Desktop/React/reactProject/pokemon-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { getAllPokemon, getPokemon } from \"./utils/pokemon\";\nimport Card from './components/Card/Card';\nimport { Navber } from './components/Card/Navbar/Navber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialURL = \"https://pokeapi.co/api/v2/pokemon\";\n  const [loading, setLoading] = useState(true);\n  const [pokemonData, setpokemonData] = useState([]);\n  const [nextURL, setNextURL] = useState(\"\");\n\n  //APIを叩くとはデータを取ってくること\n  useEffect(() => {\n    const fetchPokemonData = async () => {\n      //非同期処理（個別で処理）のためasync関数を用いる\n      //全てのポケモンデータを取得\n      let res = await getAllPokemon(initialURL); //awaitはgetAllPokemonの処理が完了するまでlesに格納しない\n      //各ポケモンの詳細を取得\n      loadPokemon(res.results);\n\n      // console.log(res);\n      setNextURL(res.next);\n      setLoading(false); //データを取得できたらローディングはありません\n    };\n\n    fetchPokemonData();\n  }, []); //ブラウザロード時にポケモンのデータを読み込む、ロード時のみのためから配列指定\n\n  const loadPokemon = async data => {\n    //asyncとawaitで取得中のpromiseのコンソールを無くす\n    let _PokemonData = await Promise.all(\n    //20個のfetchが終わるまでという意味の all\n    data.map(pokemon => {\n      // console.log(pokemon);\n      let pokemonRecode = getPokemon(pokemon.url);\n      return pokemonRecode;\n    }));\n    setpokemonData(_PokemonData); //レンダリングによりpokemonDataに格納される\n  };\n\n  console.log(pokemonData);\n  const handlePrevePage = () => {};\n  const handleNextPage = async () => {\n    setLoading(true);\n    let data = await getAllPokemon(nextURL);\n    await loadPokemon(data.results);\n    setLoading(false); //ロードが完了した\n  };\n\n  //?はtrueの時 :はfalseの時\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navber, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30ED\\u30FC\\u30C9\\u4E2D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonCardContainer\",\n          children: pokemonData.map((pokemon, i) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              pokemon: pokemon\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevePage,\n            children: \"\\u524D\\u3078\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNextPage,\n            children: \"\\u6B21\\u3078\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(App, \"TMl0QoDgjduun88rMG+DXz6og88=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getAllPokemon","getPokemon","Card","Navber","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","initialURL","loading","setLoading","pokemonData","setpokemonData","nextURL","setNextURL","fetchPokemonData","res","loadPokemon","results","next","data","_PokemonData","Promise","all","map","pokemon","pokemonRecode","url","console","log","handlePrevePage","handleNextPage","children","fileName","_jsxFileName","lineNumber","columnNumber","className","i","onClick","_c","$RefreshReg$"],"sources":["/Users/nakaharakenta/Desktop/React/reactProject/pokemon-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport {getAllPokemon,getPokemon} from \"./utils/pokemon\";\nimport Card from './components/Card/Card';\nimport { Navber } from './components/Card/Navbar/Navber';\n\n\nfunction App() {\n  const initialURL = \"https://pokeapi.co/api/v2/pokemon\"\n  const [loading,setLoading] = useState(true);\n  const [pokemonData,setpokemonData] = useState([])\n  const [nextURL,setNextURL] = useState(\"\")\n\n\n//APIを叩くとはデータを取ってくること\n  useEffect (()=>{\n    const fetchPokemonData= async()=>{//非同期処理（個別で処理）のためasync関数を用いる\n      //全てのポケモンデータを取得\n      let res= await getAllPokemon(initialURL);//awaitはgetAllPokemonの処理が完了するまでlesに格納しない\n      //各ポケモンの詳細を取得\n      loadPokemon(res.results);\n      \n      // console.log(res);\n      setNextURL(res.next); \n      setLoading(false);//データを取得できたらローディングはありません\n    };\n    fetchPokemonData();\n  },[]);//ブラウザロード時にポケモンのデータを読み込む、ロード時のみのためから配列指定\n\n\n  const loadPokemon= async (data)=>{//asyncとawaitで取得中のpromiseのコンソールを無くす\n    let _PokemonData = await Promise.all(//20個のfetchが終わるまでという意味の all\n    data.map((pokemon)=>{\n      // console.log(pokemon);\n      let pokemonRecode = getPokemon(pokemon.url);\n      return pokemonRecode;\n    })\n    );\n    setpokemonData(_PokemonData)//レンダリングによりpokemonDataに格納される\n  };\n  console.log(pokemonData);\n\n  const handlePrevePage =()=>{\n\n  };\n  const handleNextPage = async ()=>{\n    setLoading(true);\n    let data = await getAllPokemon(nextURL);\n    await loadPokemon(data.results);\n    setLoading(false)//ロードが完了した\n\n  };\n\n\n\n  //?はtrueの時 :はfalseの時\n  return (\n  <>\n  <Navber />\n  <div className=\"App\">\n    {loading ? (\n      <h1>ロード中</h1>\n    ) : (\n      <>\n      <div className=\"pokemonCardContainer\">\n        {pokemonData.map((pokemon,i)=>{\n          return <Card key={i} pokemon={pokemon}></Card>\n        })}\n      </div>\n      <div className=\"btn\">\n        <button onClick={handlePrevePage}>前へ</button>\n        <button onClick={handleNextPage}>次へ</button>\n\n\n      </div>\n    </>\n    )}\n  </div>;\n  </>\n\n\n  );\n\n};\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}