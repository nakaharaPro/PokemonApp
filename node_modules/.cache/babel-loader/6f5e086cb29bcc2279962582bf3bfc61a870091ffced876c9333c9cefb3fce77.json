{"ast":null,"code":"var _jsxFileName = \"/Users/nakaharakenta/Desktop/React/reactProject/pokemon-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { getAllPokemon } from \"./utils/pokemon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const initialURL = \"https://pokeapi.co/api/v2/pokemon\";\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPokemonData = async () => {\n      //非同期処理（個別で処理）のためasync関数を用いる\n      //全てのポケモンデータを取得\n      let les = await getAllPokemon(initialURL); //awaitはgetAllPokemonの処理が完了するまでlesに格納しない\n      //APIを叩くとはデータを取ってくること\n      console.log(les);\n      setLoading(false); //データを取得できたらローディングはありません\n    };\n\n    fetchPokemonData();\n  }, []); //ブラウザロード時にポケモンのデータを読み込む、ロード時のみのためから配列指定\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loding ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30ED\\u30FC\\u30C9\\u4E2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30DD\\u30B1\\u30E2\\u30F3\\u30C7\\u30FC\\u30BF\\u3092\\u53D6\\u5F97\\u3057\\u307E\\u3057\\u305F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"kJ2TY16y+RP6xRiZ/f8+Ioxvgxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getAllPokemon","jsxDEV","_jsxDEV","App","_s","initialURL","loading","setLoading","fetchPokemonData","les","console","log","className","children","loding","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nakaharakenta/Desktop/React/reactProject/pokemon-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport {getAllPokemon} from \"./utils/pokemon\";\n\nfunction App() {\n  const initialURL = \"https://pokeapi.co/api/v2/pokemon\"\n  const [loading,setLoading] = useState(true)\n\n  useEffect (()=>{\n    const fetchPokemonData= async()=>{//非同期処理（個別で処理）のためasync関数を用いる\n      //全てのポケモンデータを取得\n      let les= await getAllPokemon(initialURL);//awaitはgetAllPokemonの処理が完了するまでlesに格納しない\n      //APIを叩くとはデータを取ってくること\n      console.log(les);\n      setLoading(false);//データを取得できたらローディングはありません\n    };\n\n    fetchPokemonData();\n  },[]);//ブラウザロード時にポケモンのデータを読み込む、ロード時のみのためから配列指定\n  return <div className=\"App\">\n    {loding ? (\n      <h1>ロード中</h1>\n    ) : \n    <h1>ポケモンデータを取得しました</h1>}\n\n  </div>;\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,SAAQC,aAAa,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,UAAU,GAAG,mCAAmC;EACtD,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE3CD,SAAS,CAAE,MAAI;IACb,MAAMU,gBAAgB,GAAE,MAAAA,CAAA,KAAS;MAAC;MAChC;MACA,IAAIC,GAAG,GAAE,MAAMT,aAAa,CAACK,UAAU,CAAC,CAAC;MACzC;MACAK,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBF,UAAU,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC;;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAC,EAAE,CAAC,CAAC;EACN,oBAAON,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,EACxBC,MAAM,gBACLZ,OAAA;MAAAW,QAAA,EAAI;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEfhB,OAAA;MAAAW,QAAA,EAAI;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpB,CAAC;AAER;AAACd,EAAA,CAvBQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}