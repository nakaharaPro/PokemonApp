{"ast":null,"code":"var _jsxFileName = \"/Users/nakaharakenta/Desktop/React/reactProject/pokemon-app/src/App.1.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getAllPokemon } from \"./utils/pokemon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const initialURL = \"https://pokeapi.co/api/v2/pokemon\";\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPokemonData = async () => {\n      //全てのポケモンデータを取得\n      let res = await getAllPokemon(initialURL); //awaitはgetAllPokemonの処理が完了するまでlesに格納しない\n\n      //APIを叩くとはデータを取ってくること\n      console.log(res);\n      setLoading(false); //データを取得できたらローディングはありません\n    };\n\n    fetchPokemonData();\n  }, []); //ブラウザロード時にポケモンのデータを読み込む、ロード時のみのためから配列指定\n\n  //?はfalseの時 :はtrueの時\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: loding ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u30ED\\u30FC\\u30C9\\u4E2D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u30DD\\u30B1\\u30E2\\u30F3\\u30C7\\u30FC\\u30BF\\u3092\\u53D6\\u5F97\\u3057\\u307E\\u3057\\u305F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getAllPokemon","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","initialURL","loading","setLoading","fetchPokemonData","res","console","log","className","children","loding","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nakaharakenta/Desktop/React/reactProject/pokemon-app/src/App.1.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getAllPokemon } from \"./utils/pokemon\";\n\nexport function App() {\n  const initialURL = \"https://pokeapi.co/api/v2/pokemon\";\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPokemonData = async () => {\n      //全てのポケモンデータを取得\n      let res = await getAllPokemon(initialURL); //awaitはgetAllPokemonの処理が完了するまでlesに格納しない\n\n      //APIを叩くとはデータを取ってくること\n      console.log(res);\n      setLoading(false); //データを取得できたらローディングはありません\n    };\n\n    fetchPokemonData();\n  }, []); //ブラウザロード時にポケモンのデータを読み込む、ロード時のみのためから配列指定\n\n\n  //?はfalseの時 :はtrueの時\n  return <div className=\"App\">\n    {loding ? (\n      <h1>ロード中</h1>\n    ) : (\n      <>\n        <h1>ポケモンデータを取得しました</h1>\n      </>\n    )}\n\n  </div>;\n\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,OAAO,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,UAAU,GAAG,mCAAmC;EACtD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC;MACA,IAAIC,GAAG,GAAG,MAAMX,aAAa,CAACO,UAAU,CAAC,CAAC,CAAC;;MAE3C;MACAK,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC;;IAEDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGR;EACA,oBAAOR,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,EACxBC,MAAM,gBACLd,OAAA;MAAAa,QAAA,EAAI;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEblB,OAAA,CAAAE,SAAA;MAAAW,QAAA,eACEb,OAAA;QAAAa,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,gBACvB;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAER;AAACd,EAAA,CA9BeD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}